#if !canImport(ObjectiveC)
import XCTest

extension BuildServerBuildSystemTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__BuildServerBuildSystemTests = [
        ("testBuildTargetOutputs", testBuildTargetOutputs),
        ("testBuildTargets", testBuildTargets),
        ("testBuildTargetsChanged", testBuildTargetsChanged),
        ("testBuildTargetSources", testBuildTargetSources),
        ("testFileRegistration", testFileRegistration),
        ("testServerInitialize", testServerInitialize),
        ("testSettings", testSettings),
    ]
}

extension BuildSystemManagerTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__BuildSystemManagerTests = [
        ("testDependenciesUpdated", testDependenciesUpdated),
        ("testMainFiles", testMainFiles),
        ("testSettingsChangedAfterUnregister", testSettingsChangedAfterUnregister),
        ("testSettingsHeaderChangeMainFile", testSettingsHeaderChangeMainFile),
        ("testSettingsMainFile", testSettingsMainFile),
        ("testSettingsMainFileInitialIntersect", testSettingsMainFileInitialIntersect),
        ("testSettingsMainFileInitialNil", testSettingsMainFileInitialNil),
        ("testSettingsMainFileUnchanged", testSettingsMainFileUnchanged),
        ("testSettingsMainFileWithFallback", testSettingsMainFileWithFallback),
        ("testSettingsOneMainTwoHeader", testSettingsOneMainTwoHeader),
    ]
}

extension CompilationDatabasePerfTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__CompilationDatabasePerfTests = [
        ("testSplitShellEscapedCommand", testSplitShellEscapedCommand),
    ]
}

extension CompilationDatabaseTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__CompilationDatabaseTests = [
        ("testCompilationDatabaseBuildSystem", testCompilationDatabaseBuildSystem),
        ("testCompilationDatabaseBuildSystemIndexStoreClang", testCompilationDatabaseBuildSystemIndexStoreClang),
        ("testCompilationDatabaseBuildSystemIndexStoreSwift0", testCompilationDatabaseBuildSystemIndexStoreSwift0),
        ("testCompilationDatabaseBuildSystemIndexStoreSwift1", testCompilationDatabaseBuildSystemIndexStoreSwift1),
        ("testCompilationDatabaseBuildSystemIndexStoreSwift2", testCompilationDatabaseBuildSystemIndexStoreSwift2),
        ("testCompilationDatabaseBuildSystemIndexStoreSwift3", testCompilationDatabaseBuildSystemIndexStoreSwift3),
        ("testCompilationDatabaseBuildSystemIndexStoreSwift4", testCompilationDatabaseBuildSystemIndexStoreSwift4),
        ("testDecodeCompDBCommand", testDecodeCompDBCommand),
        ("testEncodeCompDBCommand", testEncodeCompDBCommand),
        ("testJSONCompilationDatabaseCoding", testJSONCompilationDatabaseCoding),
        ("testJSONCompilationDatabaseFromDirectory", testJSONCompilationDatabaseFromDirectory),
        ("testJSONCompilationDatabaseLookup", testJSONCompilationDatabaseLookup),
        ("testSplitShellEscapedCommand", testSplitShellEscapedCommand),
    ]
}

extension FallbackBuildSystemTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__FallbackBuildSystemTests = [
        ("testC", testC),
        ("testCXX", testCXX),
        ("testObjC", testObjC),
        ("testObjCXX", testObjCXX),
        ("testSwift", testSwift),
        ("testUnknown", testUnknown),
    ]
}

extension ToolchainRegistryTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ToolchainRegistryTests = [
        ("testDefaultBasic", testDefaultBasic),
        ("testDefaultDarwin", testDefaultDarwin),
        ("testDuplicateError", testDuplicateError),
        ("testDuplicatePathError", testDuplicatePathError),
        ("testDuplicateXcodeError", testDuplicateXcodeError),
        ("testDylibNames", testDylibNames),
        ("testFromDirectory", testFromDirectory),
        ("testInstallPath", testInstallPath),
        ("testInstallPathVsEnv", testInstallPathVsEnv),
        ("testMultipleXcodes", testMultipleXcodes),
        ("testSearchDarwin", testSearchDarwin),
        ("testSearchExplicitEnv", testSearchExplicitEnv),
        ("testSearchExplicitEnvBuiltin", testSearchExplicitEnvBuiltin),
        ("testSearchPATH", testSearchPATH),
        ("testSubDirs", testSubDirs),
        ("testUnknownPlatform", testUnknownPlatform),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(BuildServerBuildSystemTests.__allTests__BuildServerBuildSystemTests),
        testCase(BuildSystemManagerTests.__allTests__BuildSystemManagerTests),
        testCase(CompilationDatabasePerfTests.__allTests__CompilationDatabasePerfTests),
        testCase(CompilationDatabaseTests.__allTests__CompilationDatabaseTests),
        testCase(FallbackBuildSystemTests.__allTests__FallbackBuildSystemTests),
        testCase(ToolchainRegistryTests.__allTests__ToolchainRegistryTests),
    ]
}
#endif
